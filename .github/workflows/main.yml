name: Build Xvfb (x86_64 + ARM64)

on:
  push:
    tags:
      - "v*"           # Runs when pushing a tag like v1.0.0
  workflow_dispatch:   # Manual trigger

jobs:
  build_x86:
    runs-on: ubuntu-latest
    container:
      image: debian:12

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install base dependencies (host)
        run: |
          apt-get update
          apt-get install -y meson ninja-build pkg-config python3 python3-pip build-essential git x11-xkb-utils

      - name: Build project
        run: |
          bash .gitlab-ci/debian-install.sh
          meson setup build
          meson compile -C build

        continue-on-error: true

      - name: Show binary info
        run: |
          file build/hw/vfb/Xvfb || true
          ls -lh build/hw/vfb/Xvfb || true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        if: success() || always()
        with:
          name: Xvfb_x86
          path: build/hw/vfb/Xvfb

  build_arm64:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build project
        run: |
          meson setup build
          meson compile -C build

      - name: Show binary info
        run: |
          file build/hw/vfb/Xvfb || true
          file build/hw/xfree/Xorg || true
      
      - name: Prepare artifact files and name
        run: |
          FILES=""
          ARTIFACT_NAME=""
          if [ -f build/hw/vfb/Xvfb ]; then
            FILES="$FILES build/hw/vfb/Xvfb"
            ARTIFACT_NAME="Xvfb"
          fi
          if [ -f build/hw/xfree/Xorg ]; then
            FILES="$FILES build/hw/xfree/Xorg"
            if [ -z "$ARTIFACT_NAME" ]; then
              ARTIFACT_NAME="Xorg"
            else
              ARTIFACT_NAME="${ARTIFACT_NAME}-Xorg"
            fi
          fi
          echo "Files to upload: $FILES"
          echo "Artifact name: $ARTIFACT_NAME"
          echo "FILES=$FILES" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: ${{ env.FILES != '' }}
        with:
          name: ${{ env.ARTIFACT_NAME }}-arm64
          path: ${{ env.FILES }}

  release:
    runs-on: ubuntu-latest
    needs: [build_x86, build_arm64]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Show artifacts
        run: ls -R artifacts || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        continue-on-error: true
        with:
          files: artifacts/**
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
