name: Build Xvfb (x86_64 + ARM64)

on:
  push:
    tags:
      - "v*"           # Runs when pushing a tag like v1.0.0
  workflow_dispatch:   # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:12
    strategy:
      matrix:
        include:
          - name: x86_64
            arch: amd64
            runner: ubuntu-latest
            build_cmd: |
              sudo bash .gitlab-ci/debian-install.sh
              meson setup build
              meson compile -C build
          - name: arm64
            arch: arm64
            runner: ubuntu-latest
            build_cmd: |
              sudo apt-get update
              sudo apt-get install -y qemu-user-static
              docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
              docker run --rm --platform linux/arm64 -v $PWD:/src -w /src arm64v8/ubuntu:24.04 bash -c '
                set -e
                apt-get update &&
                apt-get install -y meson ninja-build pkg-config python3 python3-pip build-essential git x11-xkb-utils &&
                bash .gitlab-ci/debian-install.sh &&
                meson setup build &&
                meson setup build -Dxorg=false -Dc_link_args="-static" -Ddefault_library=static --reconfigure &&
                meson compile -C build
              '

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install base dependencies (host)
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build pkg-config python3 python3-pip build-essential git x11-xkb-utils

      - name: Build project (${{ matrix.name }})
        run: ${{ matrix.build_cmd }}
        continue-on-error: true

      - name: Show binary info
        run: |
          file build/hw/vfb/Xvfb || true
          ls -lh build/hw/vfb/Xvfb || true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        if: success() || always()
        with:
          name: Xvfb-${{ matrix.arch }}
          path: build/hw/vfb/Xvfb

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Show artifacts
        run: ls -R artifacts || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        continue-on-error: true
        with:
          files: artifacts/**/Xvfb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
